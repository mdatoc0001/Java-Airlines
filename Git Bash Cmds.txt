--------
Commands
--------

$ <cmd> --help | Shows list of commands for given cmd
$ cd ___ | opens designated file path (i.e. cd desktop/ or cd classes/)
	Press TAB after typing in first few characters to autofill
$ cd ..  | goes back one level in a file path (follow exact format)
$ cd ../.. ; pwd | goes back to 2 levels
$ chmod ___ ___ | chmod number file (i.e. conversion_2float.md)
$ chmod ___ ___ decode_utf8.md | chmod number file (i.e. decode_utf8.md)
	$ ls -l | Do after chmod
$ diff file1 file2 | Compares the text/answers for 2 different files (i.e. a submission and an answers text file)
	$ diff -y file1 file2 | Compares files side by side
$ ls ___ | displays the files in current file directory
	$ ls -R .. | sort | tail [] Sorts
	$ ls -a | displays ALL files in current directory, including hidden files
$ ping ___ | Shows the ping for a network / domain (i.e. ping ssh.csun.edu / www.csun.edu)
$ tracert ____ | Shows the time to live for a domain (i.e. www.csun.edu)
$ git clone ___ | Clones repository into current directory (must clone the SSH link, i.e. git@github.com:COMP122/first-assignment.git)
$ git log | Shows a list of updates made in a folder
$ git checkout ___ | Insert the commit number from a git log
$ git tag ___ | Adds a tag/name to the current commit from a git log
	$ git push --tags | Updates the tags for a commit when doing a git pull
	$ git tag -d <label> | Deletes the tag for designated commit
	$ git tag <label> / $ git tag -f <label>| Updates tag 'file'
	$ git tag --help
$ git merge | Checks edits made from 2 repositories and checks if you can do a git push w/ out error
$ git fetch | Copies all new information from the remote repository into the local repository
$ git pull | Does a git merge and fetch in one line
$ git add | Adds a file to the staging area
$ git commit | Places all stage files into the local repository
	$ git reset --hard HEAD^ | Deletes the current commit at HEAD (WILL RESET YOUR JAVA FILE DATA TO PREVIOUS COMMIT)
	$ git reset --soft HEAD~ | Deletes the current commit at HEAD if it has not yet been pushed
$ git push | Copies all new information from the local repository into the remote repository
	$ git push --tags | Pushes out the tags for a repository
$ git status | Obtains a recap of your current working directory, staging, and branch information
$ cp file1 file2 | Copy
$ cp -r
$ mv file1 file2 | Move
$ rm file1 | Remove
$ rm -r
$ mkdir ___ | Make directory
$ rmdir
$ java checksum
$ start ___ | opens designated file
$ mars ___ | opens a .s file in mars (not a default cmd, a user-created alias, guide: https://github.com/COMP122/mars-mips/blob/main/MARS.md)
	$ mars & | opens mars.mips in background

Other cmds: C:\Users\vwrav\Desktop\classes\comp122\class-material\resources

------
Issues
------
- If in the terminal you cannot type anything and there is a :, press Q to quit

-----------------------------
General Assignment Directions
-----------------------------

	1. Clone this repository to your computer.
	2. Review the "assignment.md" file.
	3. Make a copy of this file, naming it "submission.md": cp assignment.md submission.md
	4. Edit this file to include your name in the appropriate location.
	5. Do git rm .gitignore
	6. Add this file to your local repository: git add submission.md
	7. Commit this file to your local repository: git commit -m 'creating file'
	8. Push the current contents of your local repository to remote repository: git push

	Repeat steps 6-8 as you edit the submission.md document to update your changes

	An HTML comment tags <!-- response --> have been added to each line that requires a response.
	Your response should be placed to the left of the HTML comment.

-----------------------------

Helpful links:

MIPS: http://vbrunell.github.io/docs/C%20to%20MIPS.pdf